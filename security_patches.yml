---
- name: Apply security updates on Ubuntu 24.04
  hosts: "{{ hostname | default('all') }}"
  become: yes
  become_method: sudo
  vars:
    log_dir: "/var/tmp/ansible_logs"
    log_file: "{{ log_dir }}/security_updates.json"

  tasks:
    - name: Ensure the log directory exists
      become: yes
      file:
        path: "{{ log_dir }}"
        state: directory
        mode: "0755"
    
    - name: Ensure the log file exists
      become: yes
      file:
        path: "{{ log_file }}"
        state: touch
        mode: "0644"

    - name: Update package cache
      become: yes
      apt:
        update_cache: yes
        cache_valid_time: 3600
      ignore_errors: yes

    - name: List upgradable packages
      become: yes
      shell: apt list --upgradable
      register: upgradable_list
      changed_when: false
      ignore_errors: yes

    - name: Check for security updates
      become: yes
      shell: apt-get -s upgrade | grep -i security || echo "No security updates available"
      register: security_check
      changed_when: false
      ignore_errors: yes

    - name: Perform security upgrade
      become: yes
      shell: apt-get upgrade -y --only-upgrade
      register: upgrade_output
      changed_when: "'upgraded' in upgrade_output.stdout or 'upgraded' in upgrade_output.stderr"
      ignore_errors: yes

    - name: Log the update results in JSON format
      become: yes
      copy:
        content: |
          {
            "date": "{{ ansible_date_time.iso8601 }}",
            "hostname": "{{ inventory_hostname }}",
            "upgradable_packages": "{{ upgradable_list.stdout | default('No upgradable packages found') }}",
            "security_updates": "{{ security_check.stdout | default('No security updates available') }}",
            "upgrade_result": "{{ upgrade_output.stdout | default('No updates were applied') }}"
          }
        dest: "{{ log_file }}"
        mode: "0644"

    - name: Notify success
      debug:
        msg: "Security updates applied successfully on {{ inventory_hostname }} and logged to {{ log_file }}."

    # Optional Email Notification (if needed)
    # - name: Send log via email
    #   mail:
    #     host: "smtp.mailjet.com"
    #     port: 587
    #     username: "{{ mailjet_api_key }}"
    #     password: "{{ mailjet_secret_key }}"
    #     to: "recipient@example.com"
    #     subject: "Security Updates Applied"
    #     body: "{{ upgrade_output.stdout }}"
    #     from: "your_email@example.com"
    #     smtp_tls: yes
    #   when: upgrade_output.stdout is defined
