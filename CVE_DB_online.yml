---
- name: Compare Ubuntu CVEs and patch vulnerable packages
  hosts: '{{ hostname }}'
  become: yes
  become_method: sudo
  vars:
    log_file: "/var/log/ansible/security_update_log.json"
    cve_temp_file: "/tmp/ubuntu_cves.html"
    cve_url: "https://ubuntu.com/security/cves?priority=critical"

  tasks:
    - name: Ensure log file exists
      copy:
        dest: "{{ log_file }}"
        content: "[]"
        force: no
        mode: '0644'

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Get list of installed packages
      command: dpkg-query -W -f='${Package} ${Version}\n'
      register: installed_packages_raw

    - name: Convert installed packages to dictionary
      set_fact:
        installed_packages: >-
          {{
            dict(
              installed_packages_raw.stdout_lines
              | map('split', ' ')
              | map('first')
              | zip(installed_packages_raw.stdout_lines | map('split', ' ') | map('last'))
            )
          }}

    - name: Download Ubuntu CVE HTML page (Critical)
      get_url:
        url: "{{ cve_url }}"
        dest: "{{ cve_temp_file }}"

    - name: Parse CVE and package names from HTML
      shell: |
        cat {{ cve_temp_file }} | grep -oP 'package/\K[^"]+' | sort -u
      register: vulnerable_pkg_names

    - name: Find installed vulnerable packages
      set_fact:
        vulnerable_packages: >-
          {{
            vulnerable_pkg_names.stdout_lines
            | select('in', installed_packages.keys())
            | list
          }}

    - name: Upgrade vulnerable packages
      apt:
        name: "{{ item }}"
        state: latest
      loop: "{{ vulnerable_packages }}"
      when: vulnerable_packages | length > 0

    - name: Read existing JSON log
      slurp:
        src: "{{ log_file }}"
      register: raw_log

    - name: Decode existing JSON log
      set_fact:
        existing_log: "{{ raw_log.content | b64decode | from_json }}"

    - name: Save vulnerable patch log
      copy:
        content: >-
          {{
            (existing_log + [
              {
                "timestamp": ansible_date_time.iso8601,
                "host": inventory_hostname,
                "action": "patch_critical_cve_packages",
                "patched_packages": vulnerable_packages,
                "source": "ubuntu.com/security/cves?priority=critical",
                "changed": true
              }
            ]) | to_nice_json
          }}
        dest: "{{ log_file }}"
      when: vulnerable_packages | length > 0

    - name: Run dist-upgrade if no CVE packages matched
      apt:
        upgrade: dist
      register: full_upgrade_result
      when: vulnerable_packages | length == 0

    - name: Log full upgrade result
      copy:
        content: >-
          {{
            (existing_log + [
              {
                "timestamp": ansible_date_time.iso8601,
                "host": inventory_hostname,
                "action": "full_upgrade_fallback",
                "changed": full_upgrade_result.changed,
                "msg": full_upgrade_result.msg | default("No message")
              }
            ]) | to_nice_json
          }}
        dest: "{{ log_file }}"
      when: full_upgrade_result is defined

    - name: Done
      debug:
        msg: "CVEs checked and patched. Logs saved to {{ log_file }}"
