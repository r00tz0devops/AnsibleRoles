---
- name: Compare Ubuntu CVEs (Critical, High, Medium) and patch vulnerable packages
  hosts: '{{ hostname }}'
  become: yes
  become_method: sudo
  vars:
    log_file: "/var/log/ansible/security_update_log.json"
    cve_temp_dir: "/tmp/ubuntu_cves"
    priorities:
      - critical
      - high
      - medium

  tasks:
    - name: Ensure log file exists
      copy:
        dest: "{{ log_file }}"
        content: "[]"
        force: no
        mode: '0644'

    - name: Ensure CVE temp directory exists
      file:
        path: "{{ cve_temp_dir }}"
        state: directory

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Get list of installed packages
      command: dpkg-query -W -f='${Package} ${Version}\n'
      register: installed_packages_raw

    - name: Convert installed packages to dictionary
      set_fact:
        installed_packages: >-
          {{
            dict(
              installed_packages_raw.stdout_lines
              | map('split', ' ')
              | map('first')
              | zip(installed_packages_raw.stdout_lines | map('split', ' ') | map('last'))
            )
          }}

    - name: Download CVE HTML pages for each priority
      uri:
        url: "https://ubuntu.com/security/cves?priority={{ item }}"
        return_content: yes
        status_code: 200
        timeout: 60
      register: cve_page_result
      retries: 5
      delay: 10
      until: cve_page_result.status == 200
      loop: "{{ priorities }}"
      loop_control:
        loop_var: item

    - name: Save each CVE page to separate file
      copy:
        content: "{{ item.1.content }}"
        dest: "{{ cve_temp_dir }}/cves_{{ item.0 }}.html"
      loop: "{{ priorities | zip(cve_page_result.results) }}"
      loop_control:
        label: "{{ item.0 }}"

    - name: Parse all package names from all CVE pages
      shell: |
        grep -hoP 'package/\K[^"]+' {{ cve_temp_dir }}/cves_*.html | sort -u
      register: vulnerable_pkg_names

    - name: Find installed vulnerable packages
      set_fact:
        vulnerable_packages: >-
          {{
            vulnerable_pkg_names.stdout_lines
            | select('in', installed_packages.keys())
            | list
          }}

    - name: Upgrade vulnerable packages
      apt:
        name: "{{ item }}"
        state: latest
      loop: "{{ vulnerable_packages }}"
      when: vulnerable_packages | length > 0

    - name: Read existing JSON log
      slurp:
        src: "{{ log_file }}"
      register: raw_log

    - name: Decode existing JSON log
      set_fact:
        existing_log: "{{ raw_log.content | b64decode | from_json }}"

    - name: Save vulnerable patch log
      copy:
        content: >-
          {{
            (existing_log + [
              {
                "timestamp": ansible_date_time.iso8601,
                "host": inventory_hostname,
                "action": "patch_cve_packages",
                "patched_packages": vulnerable_packages,
                "priorities_checked": priorities,
                "source_urls": priorities | map('regex_replace', '^', 'https://ubuntu.com/security/cves?priority=') | list,
                "changed": true
              }
            ]) | to_nice_json
          }}
        dest: "{{ log_file }}"
      when: vulnerable_packages | length > 0

    - name: Run dist-upgrade if no CVE packages matched
      apt:
        upgrade: dist
      register: full_upgrade_result
      when: vulnerable_packages | length == 0

    - name: Log full upgrade result
      copy:
        content: >-
          {{
            (existing_log + [
              {
                "timestamp": ansible_date_time.iso8601,
                "host": inventory_hostname,
                "action": "full_upgrade_fallback",
                "changed": full_upgrade_result.changed,
                "msg": full_upgrade_result.msg | default("No message"),
                "priorities_checked": priorities
              }
            ]) | to_nice_json
          }}
        dest: "{{ log_file }}"
      when: full_upgrade_result is defined

    - name: Done
      debug:
        msg: "CVEs (Critical, High, Medium) checked and patched. Logs saved to {{ log_file }}"
