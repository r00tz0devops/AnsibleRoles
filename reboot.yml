---
- name: Reboot Ubuntu Servers
  hosts: "{{ hostname | default('all') }}"
  become: yes
  become_method: sudo

  tasks:
    - name: Reboot the server
      reboot:
        reboot_timeout: 600  # Timeout for reboot (10 minutes)
        test_command: whoami  # Command to check if the server is back online
      register: reboot_status
      ignore_errors: yes  # Allow to continue even if reboot fails

    - name: Confirm reboot was successful
      debug:
        msg: "Server {{ inventory_hostname }} has been successfully rebooted."
      when: reboot_status.changed == true  # Only run this task if the reboot was successful

    - name: Handle reboot failure
      debug:
        msg: "Reboot failed on server {{ inventory_hostname }}."
      when: reboot_status.changed == false  # Only run if reboot failed

    - name: Wait for the server to come back online
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22  # Waiting for SSH to be available
        timeout: 300  # Timeout of 5 minutes
        state: started  # Wait for the server to come online
      register: wait_for_status
      when: reboot_status.changed == true  # Only run if reboot was successful

    - name: Confirm server is online (ping)
      ping:
      register: ping_status
      when: wait_for_status.rc == 0  # Only run if the wait task was successful

    - name: Verify server is back online
      debug:
        msg: "Server {{ inventory_hostname }} is back online and responsive."
      when: ping_status.ping == 'pong'  # Only run if the server is online

    - name: Handle server offline after reboot
      debug:
        msg: "Server {{ inventory_hostname }} did not come back online after reboot."
      when: ping_status.ping != 'pong'  # Only run if the server failed to respond
