---
- name: Verify and patch vulnerable packages (with JSON logging)
  hosts: '{{ hostname }}'
  become: yes
  become_method: sudo
  vars:
    log_file: "/var/log/ansible/security_update_log.json"
    high_priority_cves:
      - package: "linux-image-generic"
        cve: "CVE-2024-53144"
        version: "5.4.0-200.220"
      - package: "xserver-xorg-core"
        cve: "CVE-2025-26595"
        version: "2:1.20.13-1ubuntu1.3"
      - package: "openjdk-11-jre-headless"
        cve: "CVE-2025-21502"
        version: "11.0.26+4-1ubuntu1~24.10"

  tasks:
    - name: Ensure JSON log file exists
      copy:
        content: "[]"
        dest: "{{ log_file }}"
        force: no
        mode: "0644"

    - name: Update APT package index
      apt:
        update_cache: yes

    - name: Gather installed packages
      command: dpkg-query -W -f='${Package} ${Version}\n'
      register: installed_packages_raw

    - name: Convert installed packages to a dictionary
      set_fact:
        installed_packages: >-
          {{
            dict(
              installed_packages_raw.stdout_lines
              | map('split', ' ')
              | map('first')
              | zip(installed_packages_raw.stdout_lines | map('split', ' ') | map('last'))
            )
          }}

    - name: Identify vulnerable installed packages
      set_fact:
        vulnerable_packages: >-
          {{
            high_priority_cves
            | selectattr('package', 'in', installed_packages.keys())
            | list
          }}

    - name: Patch vulnerable packages
      apt:
        name: "{{ item.package }}"
        state: latest
      loop: "{{ vulnerable_packages }}"
      register: updated_vulnerable
      when: vulnerable_packages | length > 0

    - name: Record patch results to JSON log
      copy:
        content: >-
          {{
            (
              lookup('file', log_file) | from_json
            ) + [
              {
                "timestamp": ansible_date_time.iso8601,
                "action": "vulnerable_patch",
                "host": inventory_hostname,
                "patched": updated_vulnerable.results | map(attribute='item.package'),
                "cves": vulnerable_packages,
                "changed": updated_vulnerable.changed
              }
            ] | to_nice_json
          }}
        dest: "{{ log_file }}"
      when: vulnerable_packages | length > 0

    - name: Perform full system upgrade if no CVEs matched
      apt:
        upgrade: dist
        update_cache: yes
      register: full_upgrade_result
      when: vulnerable_packages | length == 0

    - name: Record full upgrade result to JSON log
      copy:
        content: >-
          {{
            (
              lookup('file', log_file) | from_json
            ) + [
              {
                "timestamp": ansible_date_time.iso8601,
                "action": "full_upgrade",
                "host": inventory_hostname,
                "changed": full_upgrade_result.changed,
                "msg": full_upgrade_result.msg | default("N/A")
              }
            ] | to_nice_json
          }}
        dest: "{{ log_file }}"
      when: full_upgrade_result is defined

    - name: Output completion message
      debug:
        msg: "Patch process completed. Logs available at {{ log_file }}"
