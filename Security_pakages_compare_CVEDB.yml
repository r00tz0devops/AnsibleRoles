---
- name: Verify high-priority vulnerable packages and update
  hosts: '{{ hostname }}'
  become: yes
  become_method: sudo
  vars:
    log_file: "/var/log/ansible/security_update_log.txt"
    high_priority_cves:
      - package: "openssl"
        cve: "CVE-2021-3450"
        version: "1.1.1k-1ubuntu3.1"
      - package: "libcurl3"
        cve: "CVE-2020-8231"
        version: "7.68.0-1ubuntu2.6"
      # Add more CVE entries as needed

  tasks:
    - name: Ensure log file exists
      file:
        path: "{{ log_file }}"
        state: touch
        mode: "0644"

    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Check installed packages
      command: "dpkg-query -W -f='${Package} ${Version}\n'"
      register: installed_packages

    - name: Log installed packages
      blockinfile:
        path: "{{ log_file }}"
        create: yes
        block: |
          === Installed Packages ({{ ansible_date_time.iso8601 }}) ===
          {{ installed_packages.stdout }}

    - name: Compare installed packages with known vulnerable packages
      set_fact:
        vulnerable_packages: >-
          {{
            high_priority_cves
            | selectattr('package', 'in', installed_packages.stdout_lines | map('split', ' ') | map('first') | list)
            | list
          }}

    - name: Install updates for vulnerable packages
      apt:
        name: "{{ item.package }}"
        state: latest
      loop: "{{ vulnerable_packages }}"
      register: update_result
      when: vulnerable_packages | length > 0

    - name: Log the updates applied
      blockinfile:
        path: "{{ log_file }}"
        create: yes
        block: |
          === Applied Updates ({{ ansible_date_time.iso8601 }}) ===
          {% for result in update_result.results %}
          Package: {{ result.item.package }}
          Changed: {{ result.changed }}
          Msg: {{ result.msg | default('N/A') }}
          {% endfor %}
      when: update_result is defined

    - name: Ensure the system is fully updated if no CVE matches
      apt:
        upgrade: dist
        update_cache: yes
      register: full_upgrade_result
      when: vulnerable_packages | length == 0

    - name: Log the full upgrade result
      blockinfile:
        path: "{{ log_file }}"
        create: yes
        block: |
          === Full Upgrade Output ({{ ansible_date_time.iso8601 }}) ===
          Changed: {{ full_upgrade_result.changed }}
          Packages: {{ full_upgrade_result.packages | default('N/A') }}
          Msg: {{ full_upgrade_result.msg | default('N/A') }}
      when: full_upgrade_result is defined

    - name: Log raw upgrade result (optional debug)
      blockinfile:
        path: "{{ log_file }}"
        create: yes
        block: |
          === Raw Full Upgrade Result JSON ({{ ansible_date_time.iso8601 }}) ===
          {{ full_upgrade_result | to_nice_json }}
      when: full_upgrade_result is defined

    - name: Output completion message
      debug:
        msg: "Vulnerable packages checked and updated. Logs at {{ log_file }}"
